{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/description_containers/algo_desc_container.js","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/join.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/discrete.js","webpack:///./node_modules/d3-interpolate/src/hue.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/transition/end.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-dsv/src/autoType.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/init.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/symlog.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale/src/sequentialQuantile.js","webpack:///./node_modules/d3-scale/src/diverging.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/appearance.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3/index.js","webpack:///./js/distribution_generators/poisson_disc_generator.js","webpack:///./js/distribution_generators/best_candidate_disc_generator.js","webpack:///./js/disk_sampling_demo.js","webpack:///./js/distribution_generators/random_disc_generator.js","webpack:///./js/distribution_generators/uniform_disc_generator.js","webpack:///./js/canvas_containers/image_renderer.js","webpack:///./js/canvas_containers/stippling_canvas_container.js","webpack:///./js/canvas_containers/voronoi_canvas_container.js","webpack:///./js/canvas_containers/map_canvas_container.js","webpack:///./js/description_containers/poisson_desc_container.js","webpack:///./js/description_containers/best_cand_desc_container.js","webpack:///./js/description_containers/uniform_rand_desc_container.js","webpack:///./js/description_containers/uniform_desc_container.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AlgoDescContainer","title","description","demoSample","_classCallCheck","this","descriptionContainer","document","getElementById","firstChild","removeChild","htmlTitle","createElement","innerHTML","appendChild","htmlDesc","demoCanvas","height","canvasHeight","width","canvasWidth","demo","ascending","a","b","NaN","bisector","compare","f","length","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","Math","sqrt","src_extent","min","max","array_array","slice","map","constant","identity","src_range","start","stop","step","arguments","ceil","range","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","entering","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","type","set","callback","concat","constructor","on","typename","types","T","trim","split","indexOf","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","documentElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","raise","nextSibling","lower","previousSibling","constantNull","remove_remove","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","enterGroup","updateGroup","previous","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","target","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","define","factory","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","valueOf","discrete","src_hue","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","zoom_sinh","duration","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","Infinity","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","style_styleRemove","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","string00","string10","interpolate0","string0","string1","value1","_value","attrInterpolateNS","attrInterpolate","styleTween","styleNull","style_styleFunction","listener0","undefined","styleMaybeRemove","style_styleConstant","styleInterpolate","text_textFunction","text_textConstant","tween0","tween1","easeConstant","Promise","resolve","reject","cancel","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","input","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","src_brush","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","keys","entries","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","column","pad","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","eof","eol","token","replace","preformatBody","formatValue","formatRow","test","convert","customConverter","formatBody","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","autoType","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","src_link","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","src_centroid","d3_geo_src_constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","center","circle","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","B","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","d3_geo_src_path","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","equalEarth","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","circles","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","d3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","src_stratify","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","initRange","initInterpolator","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","continuous_identity","normalize","clamper","bimap","d0","polymap","clamp","continuous_transformer","untransform","piecewise","continuous","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","log_log","transformSymlog","log1p","transformSymexp","expm1","symlogish","symlog","transformPow","transformSqrt","transformSquare","powish","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","millisecond_millisecond","src_millisecond","durationMinute","durationWeek","second_second","getMilliseconds","src_second","minute_minute","getSeconds","getMinutes","src_minute","hour_hour","getHours","src_hour","day_day","setHours","setDate","getDate","getTimezoneOffset","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","src_utcDay","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","newDate","week","day","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","locale_pad","requote","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","utcTime","sequential_transformer","k10","sequential_copy","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","diverging_transformer","k21","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","viridis","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","src_line","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","appearance","peaks","peak","vi","vj","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","__webpack_exports__","poissonSample","maxHeight","maxWidth","maxCandidates","gridHeight","gridWidth","grid","initializeGrid","numPoints","activePoints","rowIdx","coords","newPoint","colIdx","_pointToGridCoordinat","pointToGridCoordinates","_pointToGridCoordinat2","_slicedToArray","pointA","pointB","squaredDist","isInRange","_pointToGridCoordinat3","_pointToGridCoordinat4","rowIdxMin","colIdxMin","colIdxMax","rowIdxMax","_this","beginPath","lineWidth","fillStyle","_this2","candidate","strokeStyle","stroke","referencePoint","numCandidates","referenceIdx","_this3","demoNextActive","candidatePoint","drawCandidate","isValidPoint","drawChoiceCandidate","demoNextCandidate","_this4","clearRect","drawPoints","drawActives","drawRefPoint","canvas","_this5","getContext","candidateMaxReached","refCoords","BestCandidateSample","numDots","quadTree","candidateCount","nearestNeighbor","bestDistance","bestPoint","_quadTree","generateRandomPoint","_toConsumableArray","bestCand","origin","destination","candidateAttempts","bestCandidate","colorBest","demoNextCandidates","_quadTree2","drawLine","findBestCandidate","getImageOptions","getElementsByClassName","img","imgCanvas","imgContext","imgHeight","imgWidth","imgSelection","selectedImgSrc","imageUploadInput","imageUploadImage","fileReader","file","files","FileReader","onloadend","readAsDataURL","distSelectOptions","selectedDistType","poisson","poissonPoints","resetPoisson","PoissonSample","load","optionBtn","setSelectedDist","renderSampledImages","imageRenderer","ImageRenderer","render","PoissonDescContainer","BestCandDescContainer","UniformRandomSample","UniformRandomDescContainer","UniformSample","UniformDescContainer","drawImage","dotsPlaced","horizontalStep","verticalStep","horizontalPosition","verticalPosition","evenRow","originalImage","maxDotRadius","renderedImageCanvases","clearChildren","_len","elements","_key","el","mapType","clearCanvases","voronoiCanvasContainer","VoronoiCanvasContainer","htmlContainer","renderSample","stipplingCanvasContainer","StipplingCanvasContainer","mapCanvasContainer","MapCanvasContainer","drawPoint","drawNextStipplingPoint","dotRadius","getImageData","memo","val","vertices","polygonLines","drawNextPolygon","allPolygonLines","currentPixelCoordinates","_context2","generateDescription","_imgContext","gradient","createLinearGradient","addColorStop","getRGB","prevPoint","fillLine","drawNextMapLine","_possibleConstructorReturn","__proto__","getPrototypeOf","_algo_desc_container"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export default class AlgoDescContainer {\n\n    constructor(title, description, demoSample) {\n        this.title = title;\n        this.description = description;\n        this.demoSample = demoSample;\n    }\n\n    render() {\n        const descriptionContainer = document.getElementById(\"desc-container\");\n\n        while (descriptionContainer.firstChild) {\n            descriptionContainer.removeChild(descriptionContainer.firstChild);\n        }\n        \n        const htmlTitle = document.createElement(\"h3\");\n        htmlTitle.innerHTML = this.title;\n        descriptionContainer.appendChild(htmlTitle);\n        const htmlDesc = document.createElement(\"p\");\n        htmlDesc.innerHTML = this.description;\n        descriptionContainer.appendChild(htmlDesc);\n        \n        if (this.demoSample) {\n            const demoCanvas = document.createElement(\"canvas\");\n            demoCanvas.height = this.demoSample.canvasHeight;\n            demoCanvas.width = this.demoSample.canvasWidth;\n            descriptionContainer.appendChild(demoCanvas);\n            this.demoSample.demo(demoCanvas);\n        }\n    }\n}\n","export var name = \"d3\";\nexport var version = \"5.9.1\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test && rollup -c\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"0.64\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"1\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (!isNaN(node.fx)) node.x = node.fx;\n      if (!isNaN(node.fy)) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\nimport {initRange} from \"./init\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect} from \"d3-array\";\nimport {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {copy} from \"./sequential\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import appearance from \"./appearance\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export {version} from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n","export default class poissonSample {\n\n    constructor(maxHeight, maxWidth, radius, maxCandidates) {\n        this.cellSize = Math.floor(radius / Math.sqrt(2));\n        this.maxCandidates = maxCandidates;\n        this.radius = radius;\n        this.canvasHeight = maxHeight;\n        this.canvasWidth = maxWidth;\n        this.gridHeight = Math.ceil(maxHeight / this.cellSize) + 1;\n        this.gridWidth = Math.ceil(maxWidth / this.cellSize) + 1;\n    }\n\n    reset() {\n        this.grid = this.initializeGrid();\n        this.points = [];\n        this.numPoints = 0;\n        this.activePoints = [];\n    }\n\n    initializeGrid() {\n        let rowIdx, colIdx;\n\n        const grid = [];\n        for (rowIdx = 0; rowIdx < this.gridHeight; rowIdx++) {\n            grid[rowIdx] = new Array(this.gridWidth);\n        }\n        return grid;\n    }\n\n    pointToGridCoordinates(coords) {\n        let rowIdx, colIdx;\n\n        rowIdx = Math.floor(coords[1] / this.cellSize);\n        colIdx = Math.floor(coords[0] / this.cellSize);\n        return [rowIdx, colIdx];\n    }\n\n\n    insert(newPoint) {\n        let rowIdx, colIdx;\n\n        this.points.push(newPoint);\n        this.activePoints.push(newPoint);\n        \n        [rowIdx, colIdx] = this.pointToGridCoordinates(newPoint.coords);\n        this.grid[rowIdx][colIdx] = newPoint;\n        this.numPoints += 1;\n    }\n\n    distance(pointA, pointB) {\n        const squaredDist = Math.pow((pointA.coords[0] - pointB.coords[0]), 2) + Math.pow((pointA.coords[1] - pointB.coords[1]), 2);\n        return Math.sqrt(squaredDist);\n    }\n\n    isInRange(point) {\n        return (point.coords[0] > 0 &&\n            point.coords[0] < this.canvasWidth &&\n            point.coords[1] > 0 &&\n            point.coords[1] < this.canvasHeight);\n    }\n\n    isValidPoint(point) {\n        let rowIdx, colIdx;\n\n        if (!this.isInRange(point)) { return false; }\n        [rowIdx, colIdx] = this.pointToGridCoordinates(point.coords);\n\n        const rowIdxMin = Math.max(0, rowIdx - 1);\n        const colIdxMin = Math.max(0, colIdx - 1);\n        const colIdxMax = Math.min(this.gridWidth - 1, colIdx + 1);\n        const rowIdxMax = Math.min(this.gridHeight - 1, rowIdx + 1);\n\n        for (rowIdx = rowIdxMin; rowIdx <= rowIdxMax; rowIdx++) {\n            for (colIdx = colIdxMin; colIdx <= colIdxMax; colIdx++) {\n                if (this.grid[rowIdx][colIdx] && this.distance(this.grid[rowIdx][colIdx], point) < this.radius) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    drawPoints() {\n        this.points.forEach(point => {\n            this.context.beginPath();\n            this.context.arc(point.coords[0], point.coords[1], (this.radius - 1) / 3, 0, 2 * Math.PI);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = \"#353638\";\n            this.context.fill();\n        });\n    }\n\n    drawActives() {\n        this.activePoints.forEach(point => {\n            this.context.beginPath();\n            this.context.arc(point.coords[0], point.coords[1], (this.radius - 1) / 3, 0, 2 * Math.PI);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = \"#022c5b\";\n            this.context.fill();\n        });\n    }\n\n    drawCandidate(candidate) {\n        this.context.beginPath();\n        this.context.arc(candidate.coords[0], candidate.coords[1], (this.radius - 1) / 3, 0, 2 * Math.PI);\n        this.context.lineWidth = 1;\n        this.context.strokeStyle = \"black\";\n        this.context.stroke();\n    }\n\n    drawRefPoint(referencePoint) {\n        this.context.beginPath();\n        this.context.arc(referencePoint.coords[0], referencePoint.coords[1], (this.radius - 1) / 3, 0, 2 * Math.PI);\n        this.context.lineWidth = 5;\n        this.context.fillStyle = \"#9b0303\";\n        this.context.fill();\n    }\n\n    drawChoiceCandidate(candidate) {\n        this.context.beginPath();\n        this.context.arc(candidate.coords[0], candidate.coords[1], (this.radius - 1) / 3, 0, 2 * Math.PI);\n        this.context.lineWidth = 1;\n        this.context.fillStyle = \"#036d44\";\n        this.context.fill();\n    }\n\n    demoNextCandidate(numCandidates, referencePoint, referenceIdx) {\n        if (numCandidates > this.maxCandidates) {\n            this.activePoints.splice(referenceIdx, 1);\n            setTimeout(() => this.demoNextActive(), 1000);\n        } else {\n            let theta = Math.random() * 360;\n            let distance = Math.random() * this.radius + this.radius;\n            let candidatePoint = {\n                coords: [distance * Math.cos(theta) + referencePoint.coords[0],\n                distance * Math.sin(theta) + referencePoint.coords[1]]\n            };\n            this.drawCandidate(candidatePoint);\n\n            if (this.isValidPoint(candidatePoint)) {\n                this.insert(candidatePoint);\n                setTimeout(() => {\n                    this.drawChoiceCandidate(candidatePoint);\n                    setTimeout(() => this.demoNextActive(), 1000);\n                }, 500);\n            } else {\n                setTimeout(() => this.demoNextCandidate(numCandidates + 1, referencePoint, referenceIdx), 100);\n            }\n        }\n    }\n\n    demoNextActive() {\n        if (this.activePoints.length === 0) {\n            this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n            this.drawPoints();\n        } else {\n            let referenceIdx = Math.floor(Math.random() * this.activePoints.length);\n            let referencePoint = this.activePoints[referenceIdx];\n            this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n            this.drawPoints();\n            this.drawActives();\n            this.drawRefPoint(referencePoint);\n\n            setTimeout(() => this.demoNextCandidate(0, referencePoint, referenceIdx), 1000);\n        }\n    }\n\n    demo(canvas) {\n        this.reset();\n\n        const p0 = {\n            coords: [Math.round(Math.random() * this.canvasWidth),\n            Math.round(Math.random() * this.canvasHeight)]\n        };\n\n        this.insert(p0);\n        this.context = canvas.getContext('2d');\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n\n        setTimeout(() => this.demoNextActive(), 100);\n    }\n\n    load() {\n        this.reset();\n\n        const p0 = {\n            coords: [Math.round(Math.random() * this.canvasWidth), Math.round(Math.random() * this.canvasHeight)]\n        };\n\n        this.insert(p0, null);\n\n        let referenceIdx, referencePoint, numCandidates, candidateMaxReached, candidatePoint, theta, distance;\n\n        while (this.activePoints.length > 0) {\n            referenceIdx = Math.floor(Math.random() * this.activePoints.length);\n            referencePoint = this.activePoints[referenceIdx];\n            candidateMaxReached = true;\n            for (numCandidates = 0; numCandidates <= this.maxCandidates; numCandidates++) {\n                theta = Math.random() * 360;\n                distance = (Math.random() * this.radius + this.radius);\n                candidatePoint = {\n                    coords: [distance * Math.cos(theta) + referencePoint.coords[0],\n                    distance * Math.sin(theta) + referencePoint.coords[1]],\n                    refCoords: referencePoint.coords\n                };\n                if (this.isValidPoint(candidatePoint)) {\n                    this.insert(candidatePoint);\n                    candidateMaxReached = false;\n                    break;\n                }\n            }\n            if (candidateMaxReached) {\n                this.activePoints.splice(referenceIdx, 1);\n            }\n        }\n        return this.points;\n    }\n}\n","import * as d3 from \"d3\";\n\nexport default class BestCandidateSample {\n\n    constructor(maxHeight, maxWidth, numDots, numCandidates) {\n        this.canvasHeight = maxHeight;\n        this.canvasWidth = maxWidth;\n        this.numDots = numDots;\n        this.numCandidates = numCandidates;\n    }\n\n    reset() {\n        this.points = [];\n        this.quadTree = d3.quadtree();\n        this.quadTree.extent([0, 0], [this.canvasWidth, this.canvasHeight]);\n    }\n\n    distance(pointA, pointB) {\n        const squaredDist = Math.pow((pointA[0] - pointB[0]), 2) + Math.pow((pointA[1] - pointB[1]), 2);\n        return Math.sqrt(squaredDist);\n    }\n\n    generateRandomPoint() {\n        return {\n            coords: [Math.random() * this.canvasWidth, Math.random() * this.canvasHeight]\n        };\n    }\n\n    insert(point) {\n        this.points.push(point);\n        this.quadTree.add(point.coords);\n    }\n\n    findBestCandidate() {\n        let candidateCount, point, nearestNeighbor, distance, bestDistance = 0, bestPoint;\n\n        for (candidateCount = 1; candidateCount <= this.numCandidates; candidateCount++) {\n            point = this.generateRandomPoint();\n            nearestNeighbor = this.quadTree.find(...point.coords);\n            distance = this.distance(nearestNeighbor, point.coords);\n\n            if (distance > bestDistance) {\n                bestDistance = distance;\n                point.refCoords = nearestNeighbor;\n                bestPoint = point;\n            }\n        }\n        return bestPoint;\n    }\n    \n    drawPoints() {\n        this.points.forEach(point => {\n            this.context.beginPath();\n            this.context.arc(point.coords[0], point.coords[1], 4, 0, 2 * Math.PI);\n            this.context.lineWidth = 1;\n            this.context.fillStyle = \"#000002\";\n            this.context.fill();\n        });\n    }\n\n    drawCandidate(candidate) {\n        this.context.beginPath();\n        this.context.arc(candidate.coords[0], candidate.coords[1], 4, 0, 2 * Math.PI);\n        this.context.lineWidth = 1;\n        this.context.strokeStyle = \"black\";\n        this.context.stroke();\n    }\n\n    colorBest(bestCand) {\n        this.context.beginPath();\n        this.context.arc(bestCand.coords[0], bestCand.coords[1], 4, 0, 2 * Math.PI);\n        this.context.lineWidth = 1;\n        this.context.strokeStyle = \"black\";\n        this.context.stroke();\n        this.context.fillStyle = \"#560913\";\n        this.context.fill();\n    }\n\n    drawLine(origin, destination) {\n        this.context.moveTo(origin[0], origin[1]);\n        this.context.lineTo(destination[0], destination[1]);\n        this.context.lineWidth = 1;\n        this.context.strokeStyle = \"black\";\n        this.context.stroke();\n    }\n\n    demoNextCandidate(candidateAttempts, bestCandidate, bestDistance) {\n        if (candidateAttempts === this.numCandidates) {\n            this.quadTree.add(bestCandidate.coords);\n            this.points.push(bestCandidate);\n            this.colorBest(bestCandidate);\n            setTimeout(() => this.demoNextCandidates(), 2000);\n        } else {\n            const candidate = this.generateRandomPoint();\n            const nearestNeighbor = this.quadTree.find(...candidate.coords);\n            const distance = this.distance(nearestNeighbor, candidate.coords);\n            setTimeout(() => {\n                this.drawCandidate(candidate);\n                setTimeout(() => this.drawLine(candidate.coords, nearestNeighbor), 40);\n                if (distance > bestDistance) {\n                    bestCandidate = candidate;\n                    bestDistance = distance;\n                }\n                setTimeout(() => this.demoNextCandidate(candidateAttempts + 1, bestCandidate, bestDistance), 50);\n            }, 500);\n        }\n    }\n\n    demoNextCandidates() {\n        if (this.points.length === this.numDots) {\n            this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n            setTimeout(() => this.drawPoints(), 1000);\n        } else {\n            this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n            this.drawPoints();\n            setTimeout(() => this.demoNextCandidate(0, null, 0), 50);\n        }\n    }\n\n    demo(canvas) {\n        this.reset();\n        this.context = canvas.getContext('2d');\n        const p0 = this.generateRandomPoint();\n        this.insert(p0);\n        this.context.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.demoNextCandidates();\n    }\n    \n    load() {\n        this.reset();\n        const p0 = this.generateRandomPoint();\n        this.insert(p0);\n\n        let bestCandidate;\n        while (this.points.length < this.numDots) {\n            bestCandidate = this.findBestCandidate();\n            this.insert(bestCandidate);\n        }\n\n        return this.points;\n    }\n}\n","import PoissonSample from './distribution_generators/poisson_disc_generator';\nimport BestCandidateSample from './distribution_generators/best_candidate_disc_generator';\nimport UniformRandomSample from './distribution_generators/random_disc_generator';\nimport UniformSample from './distribution_generators/uniform_disc_generator';\nimport ImageRenderer from './canvas_containers/image_renderer';\nimport PoissonDescContainer from './description_containers/poisson_desc_container';\nimport BestCandDescContainer from './description_containers/best_cand_desc_container';\nimport UniformRandomDescContainer from './description_containers/uniform_rand_desc_container';\nimport UniformDescContainer from './description_containers/uniform_desc_container';\n\n// Helper function to pull selected images from html\nfunction getImageOptions() {\n    return Array.from(document.getElementsByClassName('image-selection'));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const img = new Image();\n    img.src = 'images/abbeyRoad.jpg';\n    const imgCanvas = document.getElementById(\"image-canvas\");\n    const imgContext = imgCanvas.getContext('2d');\n    const imgHeight = imgCanvas.height;\n    const imgWidth = imgCanvas.width;\n\n    const setSelectedImg = (selectedImgSrc) => {\n        let classList;\n        getImageOptions().forEach(imgSelection => {\n            classList = imgSelection.classList;\n            if (imgSelection.src === selectedImgSrc) {\n                classList.add('selected-image');\n            } else {\n                classList.remove('selected-image');\n            }\n        });\n        img.src = selectedImgSrc;\n    };\n\n    getImageOptions().forEach(imgSelection => {\n        imgSelection.addEventListener('click', (event) => {\n            setSelectedImg(event.target.src);\n        });\n    });\n\n    const imageUploadInput = document.getElementById('image-file-input');\n    const imageUploadImage = document.getElementById('user-image');\n    let fileReader;\n    let file;\n    // allow user upload\n    imageUploadInput.addEventListener('change', (event) => {\n        file = event.target.files[0];\n        fileReader = new FileReader();\n\n        fileReader.onloadend = () => {\n            imageUploadImage.src = fileReader.result;\n        };\n\n        if (file) {\n            fileReader.readAsDataURL(file);\n        }\n    });\n\n    const distSelectOptions = document.getElementById(\"distribution-selection-options\").children;\n    // set default distribution generator to be poisson\n    let selectedDistType = 'poisson';\n\n    // since a different number of poisson points is generated each time,\n    // we'll need a reference to this number so we can ensure the other algorithms\n    // generate the same number of points for accurate comparison\n    let poisson, poissonPoints;\n\n    const resetPoisson = () => {\n        poisson = new PoissonSample(imgHeight, imgWidth, 3, 20);\n        poissonPoints = poisson.load();\n    };\n\n    Array.from(distSelectOptions).forEach(optionBtn => {\n        optionBtn.addEventListener('click', (event) => {\n            event.preventDefault();\n            setSelectedDist(event.target.value);\n        });\n    });\n\n    const setSelectedDist = (type) => {\n        let classList;\n        \n        Array.from(distSelectOptions).forEach(optionBtn => {\n            classList = optionBtn.classList;\n            if (optionBtn.value !== type) {\n                classList.remove('selected-dist');\n                classList.add('nonselected-dist');\n            } else {\n                classList.add('selected-dist');\n                classList.remove('nonselected-dist');\n            }\n        });\n\n        if (type === 'poisson') resetPoisson();\n        selectedDistType = type;\n        renderSampledImages(type);\n    };\n\n    function renderSampledImages(type) {\n        const imageRenderer = new ImageRenderer(imgCanvas, imgHeight, imgWidth, 4);\n        let points;\n        \n        switch (type) {\n\n            case \"poisson\":\n                imageRenderer.render(poissonPoints, 'poisson');\n                (new PoissonDescContainer).render();\n                break;\n            case \"best-candidate\":\n                const bestCandidate = new BestCandidateSample(imgHeight, imgWidth, poissonPoints.length, 10);\n                points = bestCandidate.load();\n                imageRenderer.render(points, 'best-candidate');\n                (new BestCandDescContainer).render();\n                break;\n            case \"uniform-random\":\n                const randomSample = new UniformRandomSample(imgHeight, imgWidth, poissonPoints.length);\n                points = randomSample.load();\n                imageRenderer.render(points);\n                (new UniformRandomDescContainer).render();\n                break;\n            case \"uniform\":\n                const uniform = new UniformSample(imgHeight, imgWidth, 5);\n                points = uniform.load();\n                imageRenderer.render(points);\n                (new UniformDescContainer).render();\n                break;\n        }\n    }\n\n    img.onload = () => {\n        imgContext.drawImage(img, 0, 0, imgHeight, imgWidth);\n        resetPoisson();\n        renderSampledImages(selectedDistType);\n    };\n});\n","export default class UniformRandomSample {\n    \n    constructor(canvasHeight, canvasWidth, numDots) {\n        this.canvasHeight = canvasHeight;\n        this.canvasWidth = canvasWidth;\n        this.numDots = numDots;\n        this.points = [];\n    }\n\n    load() {\n        let dotsPlaced = 0;\n        while (dotsPlaced < this.numDots) {\n            let xCoord = Math.random() * this.canvasWidth;\n            let yCoord = Math.random() * this.canvasHeight;\n            let point = { coords: [xCoord, yCoord] };\n            this.points.push(point);\n            dotsPlaced += 1;\n        }\n        return this.points;\n    }\n}\n","export default class UniformSample {\n\n    constructor(canvasHeight, canvasWidth, radius) {\n        this.radius = radius;\n        this.canvasHeight = canvasHeight;\n        this.canvasWidth = canvasWidth;\n        this.points = [];\n    }\n\n    load() {\n        const horizontalStep = this.radius;\n        const verticalStep = Math.sqrt(Math.pow(this.radius, 2) - Math.pow((this.radius / 2), 2));\n\n        let horizontalPosition = 0;\n        let verticalPosition = 0;\n        let evenRow = true;\n        let point;\n\n        let numPoints = 0;\n        \n        while (verticalPosition < this.canvasHeight) {\n            horizontalPosition = evenRow ? 0 : this.radius / 2;\n            while (horizontalPosition < this.canvasWidth) {\n                point = { coords: [horizontalPosition, verticalPosition] };\n                this.points.push(point);\n                numPoints += 1;\n                horizontalPosition += horizontalStep;\n            }\n            verticalPosition += verticalStep;\n            evenRow = !evenRow;\n        }\n        return this.points;\n    }\n}\n","import * as d3 from \"d3\";\nimport StipplingCanvasContainer from './stippling_canvas_container';\nimport VoronoiCanvasContainer from './voronoi_canvas_container';\nimport MapCanvasContainer from './map_canvas_container';\n\nexport default class ImageRenderer {\n    constructor(originalImage, height, width, maxDotRadius) {\n        this.imgContext = document.getElementById('image-canvas').getContext('2d');\n        this.height = height;\n        this.width = width;\n        this.maxDotRadius = maxDotRadius;\n        this.renderedImageCanvases = document.getElementById('sampled-canvases');\n    }\n\n    clearCanvases() {\n        this.clearChildren(this.renderedImageCanvases);\n    }\n\n    clearChildren(...elements) {\n        elements.forEach((el) => {\n            while (el.firstChild) {\n                el.removeChild(el.firstChild);\n            }\n        });\n    }\n\n    render(points, mapType) {\n        this.clearCanvases();\n\n        const voronoiCanvasContainer = new VoronoiCanvasContainer(this.height, this.width);\n        this.renderedImageCanvases.appendChild(voronoiCanvasContainer.htmlContainer);\n        voronoiCanvasContainer.renderSample(this.imgContext, points);\n\n        const stipplingCanvasContainer = new StipplingCanvasContainer(this.height, this.width, this.maxDotRadius);\n        this.renderedImageCanvases.appendChild(stipplingCanvasContainer.htmlContainer);\n        stipplingCanvasContainer.renderSample(this.imgContext, points, this.maxDotRadius);\n        \n        if (mapType) {\n            const mapCanvasContainer = new MapCanvasContainer(this.height, this.width, mapType);\n            this.renderedImageCanvases.appendChild(mapCanvasContainer.htmlContainer);\n            mapCanvasContainer.renderSample(this.imgContext, points);\n        }\n    }\n}\n","export default class StipplingCanvasContainer {\n    \n    constructor(height, width) {\n        this.htmlContainer = document.createElement(\"div\");\n        this.htmlContainer.height = height + 50;\n        this.htmlContainer.width = width + 50;\n        this.title = document.createElement(\"h3\");\n        this.title.innerHTML = \"Stippling\";\n        this.htmlContainer.appendChild(this.title);\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.height = height;\n        this.canvas.width = width;\n        this.context = this.canvas.getContext('2d');\n        this.htmlContainer.appendChild(this.canvas);\n        this.description = document.createElement(\"p\");\n        this.description.innerHTML = \"For each point generated by the sample, dots are placed on the canvas.  The size of each dot is determined by the point's grayscale value in the original image\";\n        this.htmlContainer.appendChild(this.description);\n    }\n\n    drawNextStipplingPoint(points) {\n        if (points.length === 0) { return; }\n        this.drawPoint(points[0].coords);\n        setTimeout(() => this.drawNextStipplingPoint(points.slice(1)), 1);\n    }\n\n    drawPoint(point) {\n        const pixelData = this.imgContext.getImageData(point[0], point[1], 1, 1).data.slice(0, 3);\n        const grayValue = pixelData.reduce((memo, val) => memo + val, 0) / 3;\n        const dotRadius = (((255 - grayValue) / 255)) * (this.maxDotRadius / 2);\n        this.context.beginPath();\n        this.context.arc(point[0], point[1], dotRadius, 0, 2 * Math.PI);\n        this.context.fill();\n    }\n\n    renderSample(imgContext, points, maxDotRadius) {\n        this.imgContext = imgContext;\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.maxDotRadius = maxDotRadius;\n        this.drawNextStipplingPoint(points);\n    }\n}\n","import * as d3 from \"d3\";\n\nexport default class VoronoiCanvasContainer {\n    \n    constructor(height, width) {\n        this.htmlContainer = document.createElement(\"div\");\n        this.htmlContainer.height = height + 50;\n        this.htmlContainer.width = width + 50;\n        this.title = document.createElement(\"h3\");\n        this.title.innerHTML = \"Voronoi\";\n        this.htmlContainer.appendChild(this.title);\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.height = height;\n        this.canvas.width = width;\n        this.context = this.canvas.getContext('2d');\n        this.htmlContainer.appendChild(this.canvas);\n        this.description = document.createElement(\"p\");\n        this.description.innerHTML = \"For each sample a Voronoi polygon is generated, where each pixel within a polygon is closer to it's sample point than any others.  We use the sample point's color value to determine the polygon's color. \";\n        this.htmlContainer.appendChild(this.description);\n    }\n\n    renderSample(imgContext, points) {\n        this.imgContext = imgContext;\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        const voronoi = d3.voronoi();\n        voronoi.extent([[0, 0], [this.canvas.height, this.canvas.width]]);\n        const vertices = points.map(point => point.coords);\n        const polygonLines = voronoi.polygons(vertices);\n        this.drawNextPolygon(vertices, polygonLines);\n    }\n\n    drawNextPolygon(vertices, allPolygonLines) {\n        const vertex = vertices[0];\n        const polygonLines = allPolygonLines[0];\n\n        if (!(vertex && polygonLines)) { return; }\n        \n        let rgb, rgbSum, currentPixelCoordinates, j;\n\n        rgb = Array.from(this.imgContext.getImageData(vertex[0], vertex[1], 1, 1).data.slice(0, 3));\n        \n        currentPixelCoordinates = [polygonLines[0][0], polygonLines[0][1]];\n\n        this.context.beginPath();\n        this.context.moveTo(...currentPixelCoordinates);\n\n        for (j = 1; j < polygonLines.length; j++) {\n            currentPixelCoordinates = [polygonLines[j][0], polygonLines[j][1]];\n            this.context.lineTo(...currentPixelCoordinates);\n        }\n        \n        this.context.fillStyle = `rgb(${rgb.join(\", \")})`;\n        this.context.closePath();\n        this.context.fill();\n\n        setTimeout(() => this.drawNextPolygon(vertices.slice(1), allPolygonLines.slice(1)), 1);\n    }\n}\n","export default class MapCanvasContainer {\n    \n    constructor(height, width, mapType) {\n        this.htmlContainer = document.createElement(\"div\");\n        this.title = document.createElement(\"h3\");\n        this.title.innerHTML = \"Generation Map\";\n        this.htmlContainer.appendChild(this.title);\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.height = height;\n        this.canvas.width = width;\n        this.context = this.canvas.getContext('2d');\n        this.htmlContainer.appendChild(this.canvas);\n        this.description = document.createElement(\"p\");\n        this.description.innerHTML = this.generateDescription(mapType);\n        this.htmlContainer.appendChild(this.description);\n    }\n\n    generateDescription(mapType) {\n        switch (mapType) {\n            case 'poisson':\n                return (\n                    \"For each sample point a tree branch is generated, where each node is the active point and each additional sample represents a child to that parent.\" \n                );\n            case 'best-candidate':\n                return (\n                    \"For each sample point a graph is made where each edge connects a candidate with its nearest neighbor at the time when it is chosen.\"\n                );\n        }\n    }\n\n    getRGB(point) {\n        const rgbVals = Array.from(this.imgContext.getImageData(...point, 1, 1).data.slice(0, 3));\n        return `rgb(${rgbVals.join(', ')})`;\n    }\n\n    fillLine(pointA, pointB) {\n        const gradient = this.context.createLinearGradient(pointA[0], pointB[0], pointA[1], pointB[1]);\n\n        gradient.addColorStop(0, this.getRGB(pointA));\n        gradient.addColorStop(1, this.getRGB(pointB));\n        this.context.strokeStyle = gradient;\n        this.context.stroke();\n    }\n\n    drawNextMapLine(points) {\n        if (points.length === 0) {\n            return;\n        } else if (points[0].refCoords) {\n            const newPoint = points[0].coords;\n            const prevPoint = points[0].refCoords;\n            this.context.beginPath();\n            this.context.moveTo(prevPoint[0], prevPoint[1]);\n            this.context.lineTo(newPoint[0], newPoint[1]);\n            this.context.lineWidth = 2;\n            this.fillLine(prevPoint, newPoint);\n        }\n        setTimeout(() => this.drawNextMapLine(points.slice(1)), 1);\n    }\n\n    renderSample(imgContext, points) {\n        this.imgContext = imgContext;\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.drawNextMapLine(points);\n    }\n}\n","import AlgoDescContainer from './algo_desc_container';\nimport PoissonSample from '../distribution_generators/poisson_disc_generator';\n\nexport default class PoissonDescContainer extends AlgoDescContainer {\n\n    constructor() {\n        const title = \"Poisson Sampling\";\n        const description = \"Poisson sampling chooses a sample from a completely random cluster\" \n        + \"and attempts to find a suitable candidate within its annulus. \"\n        + \"It delivers a tight, random cluster of samples by placing new samples distance 2r from the existing sample. \" \n        + \"Meanwhile it also ensures that the sample isn't within distance r of any other.\";\n        const demoSample = new PoissonSample(400, 600, 20, 20);\n        super(title, description, demoSample);\n    }\n}\n","import AlgoDescContainer from './algo_desc_container';\nimport BestCandidateSample from '../distribution_generators/best_candidate_disc_generator';\n\nexport default class BestCandDescContainer extends AlgoDescContainer {\n\n    constructor() {\n        const title = \"Mitchell's Best Candidate Sampling\";\n        const description = \"Mitchell's best candidate draws a specific number of candidates at random\"\n        + \"and selects the one with the largest distance from the existing samples.\";\n        const demoSample = new BestCandidateSample(400, 600, 100, 10);\n        super(title, description, demoSample);\n    }\n}\n","import AlgoDescContainer from './algo_desc_container';\n\nexport default class UniformRandomDescContainer extends AlgoDescContainer {\n    \n    constructor() {\n        const title = \"Uniform Random Sampling\";\n        const description = \"Uniform random selects points at completely random X and Y coordinates until the sample size is reached.\";\n        super(title, description);\n    }\n}\n","import AlgoDescContainer from './algo_desc_container';\n\nexport default class UniformDescContainer extends AlgoDescContainer {\n    \n    constructor() {\n        const title = \"Uniform Sampling\";\n        const description = \"Uniform grid takes points generated at set distance and angles from existing points.\";\n        super(title, description);\n    }\n}\n"],"sourceRoot":""}